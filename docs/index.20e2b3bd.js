const e=e=>document.createElement(e),t=e=>document.querySelector(e),o=e=>e.classList,n=(e,t,o)=>e.setAttribute(t,o),r=(e,t)=>e.getAttribute(t),l=(e,t,o)=>e.addEventListener(t,o),i=(e,t,o)=>e.style.setProperty(t,o),a=(e,t)=>window.localStorage.setItem(e,t),s="MAIN_MENU",d="LEVEL_SELECTION_MENU",c="RANDOM_LEVEL_SELECTION_MENU",u="PREDEFINED_LEVEL_SELECTION_MENU",h="COLOR_SETTINGS",m="GAME",p="RESET_MENU",b="WINNER_MENU",f="LAZY_EYE_SETTINGS_MENU",v="LEFT_EYE_SETTINGS_MENU",E="RIGHT_EYE_SETTINGS_MENU",g="light",y="dark",w="lazy",L="cell",k="flipped_cell",C="board",I="menu",_="menu-title",N="menu-title-item",$="status-line-button",S="background-color",T="border-bottom",M="outline",O="outline-offset",R="color",A={currentLevelId:0,finishedLevelIds:[],location:s,board:[],moves:[],solution:[],pattern:null,theme:g,leftEyeColor:"red",rightEyeColor:"blue"},x={...A};let U=[];function j(e,t){Object.assign(x,e);const o=Object.keys(e);t&&U.forEach((({properties:e,callback:t})=>{(e.some((e=>o.includes(e)))||0===e.length)&&t(x)}))}function B(e){j(e,!0)}function z(e){j(e,!1)}function G(){return x}function D(e,t,o){const n=Object.keys(x);e.forEach((e=>{if(!n.includes(e))throw new Error(`${e} is not key in the state.`)})),U.push({properties:e,callback:t,name:o})}function H(e){U=U.filter((t=>t.name!==e))}const Y="row_index",P="column_index",V="5px",q="2px",F="fff02259-20e4-4f4b-9a97-71f7c88f5d79",J=20,W=()=>G().leftEyeColor,X=()=>G().rightEyeColor,Z={[g]:{[I]:[[S,"white"]],[_]:[[R,"black"],[T,"1vh solid black"]],[N]:[[R,"black"],[M,`${V} solid black`],[O,`-${V}`]],[L]:[[S,"white"],[M,`${V} solid black`],[O,`-${V}`]],[k]:[[S,"black"]],[C]:[[S,"white"]],[$]:[[M,`${q} solid black`],[O,`-${q}`]]},[y]:{[I]:[[S,"black"]],[_]:[[R,"white"],[T,"1vh solid white"]],[N]:[[R,"white"],[M,`${V} solid white`],[O,`-${V}`]],[L]:[[S,"black"],[M,`${V} solid white`],[O,`-${V}`]],[k]:[[S,"white"]],[C]:[[S,"black"]],[$]:[[R,"white"],[M,`${q} solid white`],[O,`-${q}`]]},[w]:{[I]:[[S,"black"]],[_]:[[R,W],[T,()=>`1vh solid ${X()}`]],[N]:[[R,W],[M,()=>`${q} solid ${X()}`],[O,`-${q}`]],[L]:[[S,W]],[k]:[[S,X]],[C]:[[S,"black"]],[$]:[[R,W],[M,()=>`${q} solid ${X()}`],[O,`-${q}`]]}},K=(e,t)=>Z[t]&&Z[t][e]?Z[t][e]:[],Q=(e,t)=>{Object.values(Z).forEach((t=>{Object.values(t).forEach((t=>{for(let o=0;o<t.length;o+=1)e.style[t[o][0]]=""}))})),t.forEach((([t,o])=>{const n="function"==typeof o?o():o;i(e,t,n)}))},ee="whole_cross",te="small_cross",oe="inverted_cross",ne="random",re={[ee]:(e,t)=>(o,n)=>{const r=[];for(let t=0;t<e;t+=1)r.push([t,n]);for(let e=0;e<t;e+=1)r.some((([t,n])=>t===o&&n===e))||r.push([o,e]);return r},[te]:(e,t)=>(o,n)=>[[0,0],[-1,0],[1,0],[0,-1],[0,1]].filter((r=>r[0]+o<e&&r[1]+n<t)).filter((e=>e[0]+o>=0&&e[1]+n>=0)).map((e=>[e[0]+o,e[1]+n])),[oe]:(e,t)=>(o,n)=>[[0,0],[-1,-1],[-1,1],[1,-1],[1,1]].filter((r=>r[0]+o<e&&r[1]+n<t)).filter((e=>e[0]+o>=0&&e[1]+n>=0)).map((e=>[e[0]+o,e[1]+n])),[ne]:(e,t)=>{const o=Object.keys(re).filter((e=>e!==ne)),n=o[Math.floor(Math.random()*o.length)];return re[n](e,t)}},le=(e,t,o,n)=>{const r=re[o](n.length,n[0].length);const l=n.map((e=>e.map((e=>e))));return r(e,t).forEach((([e,t])=>{l[e][t]=!n[e][t]})),l},ie=(e,t,{board:o,pattern:n,moves:r})=>({board:le(e,t,n,o),moves:[...r,[e,t]]}),ae=({board:e,pattern:t,moves:o})=>{if(0===o.length)return{board:e,moves:o};const n=[...o],[r,l]=n.pop();return{board:le(r,l,t,e),moves:n}},se=({board:e,pattern:t,moves:o})=>{let n=[...o],r=e.map((e=>e.map((e=>e))));for(;n.length>0;){const e=ae({board:r,pattern:t,moves:n});r=e.board,n=e.moves}return{board:r,moves:n}},de=[{id:10,board:[[!1,!0,!0,!0],[!1,!0,!0,!0],[!1,!0,!0,!0],[!1,!1,!1,!1]],solution:[[3,0]],pattern:ee},{id:20,board:[[!1,!0,!0,!1],[!0,!0,!0,!0],[!0,!0,!0,!0],[!1,!0,!0,!1]],solution:[[3,0],[0,0],[0,3],[3,3]],pattern:ee},{id:30,board:[[!0,!0,!0,!0],[!0,!1,!1,!0],[!0,!1,!1,!0],[!0,!0,!0,!0]],solution:[[1,1],[1,2],[2,2],[2,1]],pattern:ee},{id:40,board:[[!0,!1,!0,!0],[!1,!0,!0,!0],[!0,!0,!0,!1],[!0,!0,!1,!0]],solution:[[1,0],[2,3],[3,2],[0,1]],pattern:ee},{id:50,board:[[!0,!0,!0,!1],[!0,!0,!1,!0],[!0,!1,!0,!0],[!1,!0,!0,!0]],solution:[[3,0],[2,1],[1,2],[0,3]],pattern:ee},{id:60,board:[[!0,!0,!0,!0],[!1,!0,!1,!0],[!0,!1,!0,!0],[!1,!0,!1,!0]],solution:[[3,0],[2,0],[3,1],[3,2],[2,1],[1,0],[1,1],[2,2],[2,3],[1,2],[0,1]],pattern:ee},{id:70,board:[[!1,!1,!1,!1],[!1,!0,!0,!1],[!1,!0,!0,!1],[!0,!1,!1,!1]],solution:[[0,1],[0,2],[0,3],[1,3],[2,3]],pattern:ee},{id:80,board:[[!0,!0,!0,!0],[!0,!1,!1,!0],[!0,!1,!0,!0],[!0,!0,!0,!0]],solution:[[3,2],[2,3],[0,2],[1,1],[2,0]],pattern:ee},{id:90,board:[[!0,!1,!1,!0],[!1,!0,!0,!1],[!1,!0,!0,!1],[!0,!1,!1,!0]],solution:[[1,0],[0,1],[0,2],[1,3],[2,3],[3,2],[3,1],[2,0]],pattern:ee},{id:100,board:[[!0,!0,!0,!0],[!0,!0,!0,!0],[!0,!0,!0,!0],[!0,!0,!0,!1]],solution:[[0,3],[1,3],[2,3],[3,3],[3,0],[3,1],[3,2],[3,3],[3,3]],pattern:ee},{id:110,board:[[!0,!0,!1,!0,!0],[!0,!1,!1,!1,!0],[!1,!1,!1,!1,!1],[!0,!1,!1,!1,!0],[!0,!0,!1,!0,!0]],solution:[[3,3],[1,3],[1,1],[3,1],[2,2]],pattern:ee},{id:120,board:[[!0,!1,!0,!1,!0],[!1,!1,!0,!1,!1],[!0,!0,!0,!0,!0],[!1,!1,!0,!1,!1],[!0,!1,!0,!1,!0]],solution:[[3,1],[2,2],[1,3],[3,3],[2,2],[1,1],[1,0],[0,1],[4,3],[3,4],[1,4],[0,3],[4,1],[3,0]],pattern:ee},{id:130,board:[[!1,!0,!0,!1,!0],[!0,!0,!1,!0,!1],[!0,!1,!0,!1,!0],[!1,!0,!1,!0,!0],[!0,!1,!0,!0,!1]],solution:[[0,0],[0,1],[1,0],[4,3],[4,4],[3,4]],pattern:ee},{id:140,board:[[!0,!1,!1,!1,!0],[!0,!1,!1,!1,!0],[!1,!0,!1,!0,!1],[!1,!1,!1,!1,!1],[!1,!0,!1,!0,!1]],solution:[[3,1],[2,2],[3,3],[4,2],[3,2]],pattern:ee},{id:150,board:[[!1,!0,!1,!0,!1],[!0,!1,!1,!1,!0],[!1,!1,!1,!1,!1],[!0,!1,!1,!1,!0],[!1,!0,!1,!0,!1]],solution:[[4,4],[3,3],[1,3],[0,4],[3,1],[4,0],[1,1],[0,0],[2,2]],pattern:ee}],ce=(e,t,o,n)=>({rows:e,columns:t,stepsToSolve:o,pattern:n}),ue=ce(4,4,5,ee),he=ce(5,5,10,ee),me=ce(7,7,20,ee),pe=(e,t,o)=>{const n=e=>Math.floor(Math.random()*e);return[...Array(e)].map((()=>[n(t),n(o)]))},be=e=>{const{board:t,solution:o,pattern:n}=(({rows:e,columns:t,stepsToSolve:o,pattern:n})=>{let r=[...Array(e)].map((()=>Array(t).fill(!0)));const l=pe(o,e,t);for(let e=0;e<l.length;e+=1){const[t,o]=l[e];r=le(t,o,n,r)}return{board:r,solution:l,pattern:n}})({...e});B({solution:o,pattern:n,currentLevelId:0,moves:[]}),z({board:t})},fe=()=>de,ve=(e,t,o)=>{const n=o.filter((e=>!t.includes(e.id)));if(0===n.length)return null;const r=n.find((t=>t.id>e));return void 0!==r?r:n[0]},Ee=e=>{const{board:t,solution:o,pattern:n,id:r}=e;B({solution:o,pattern:n,currentLevelId:r,moves:[]}),z({board:t})},ge=e=>B({location:e}),ye=e=>B({theme:e}),we=(e,{width:t,height:o,margin:n})=>{i(e,"width",t),i(e,"height",o),i(e,"margin",n)},Le=e=>{const t=e.length,o=window.innerWidth<window.innerHeight?"vw":"vh",n=Math.floor(90/t*.95);return{margin:.05*n+o,width:n+o,height:n+o}},ke=({target:e})=>{const t=G(),o=parseInt(r(e,Y),10),n=parseInt(r(e,P),10);if(B({...ie(o,n,t)}),G().board.every((e=>e.every((e=>e))))){const{finishedLevelIds:e,currentLevelId:o}=t;e.includes(o)||z({finishedLevelIds:[...e,t.currentLevelId]}),H("board-theme-observer"),H("cell-board-observer"),l=()=>ge(b),i=500,window.setTimeout(l,i)}var l,i},Ce=(e,t)=>Q(e,K(C,t)),Ie=(e,t,o)=>{Q(e,K(t?L:k,o))},_e=()=>{H("board-theme-observer"),H("cell-board-observer");const t=G(),r=e("div");o(r).add("board"),Ce(r,t.theme),D(["theme"],(({theme:e})=>Ce(r,e)),"board-theme-observer");const{board:i}=G();for(let a=0;a<i.length;a+=1){const s=e("div");o(s).add("row");for(let r=0;r<i[a].length;r+=1){const d=e("div");o(d).add("cell"),n(d,Y,a),n(d,P,r),l(d,"click",ke),we(d,Le(i)),Ie(d,t.board[a][r],t.theme),D(["board"],(e=>Ie(d,e.board[a][r],e.theme)),"cell-board-observer"),s.appendChild(d)}r.appendChild(s)}return r},Ne=()=>{var e;(e=".cell",document.querySelectorAll(e)).forEach((e=>{const{board:t}=G();we(e,Le(t))}))},$e={currentLocation:null,map:{}};function Se(e,o){Object.assign($e.map,o);D(["location"],(({location:e})=>{if(e!==$e.currentLocation){const o=t("#root");o.innerHTML="";let n=$e.map[e];n="function"==typeof n?n():n,o.appendChild(n),$e.currentLocation=e}})),B({location:e})}function Te(t){const n=e("div");return o(n).add("ui-menu"),t&&t.forEach((e=>n.appendChild(e))),Q(n,K(I,G().theme)),D(["theme"],(({theme:e})=>{Q(n,K(I,e))}),"menu-theme-observer"),n}function Me(t,n){const r=e("button");return r.innerText=t,r.onclick=n,o(r).add("ui-menu-item"),Q(r,K(N,G().theme)),D(["theme"],(({theme:e})=>{Q(r,K(N,e))}),"menu-item-theme-observer"),r}function Oe(t){const n=e("button");return n.innerText=t,n.disabled=!0,o(n).add("ui-menu-title"),Q(n,K(_,G().theme)),D(["theme"],(({theme:e})=>{Q(n,K(_,e))}),"menu-theme-observer"),n}const Re=e=>{const t=255/(J/2);return e<J/2?`rgb(${255-e*t},0,0)`:`rgb(0,0,${(e-J/2)*t})`},Ae=(e,t)=>{const o=t/(J+1);let n=1;for(;e>o*n;)n+=1;return Re(n-1)};function xe(t){const n=e("canvas");o(n).add("color-picker");const r=n.getContext("2d"),i=n.width/(J+1);for(let e=0;e<=J;e+=1)r.fillStyle=Re(e),r.fillRect(e*i,0,i,n.height);return l(n,"click",(({clientX:e})=>{if(n){const{left:o,width:r}=n.getBoundingClientRect(),l=Ae(e-o,r);t(l)}})),n}function Ue(t){const n=e("canvas");return o(n).add("color-indicator"),D([],(e=>{if(n){const o=t(e),r=n.getContext("2d");r.fillStyle=o,r.fillRect(0,0,n.width,n.height)}})),n}function je(t,n){const r=e("button");return o(r).add("status-line-button"),r.innerHTML=t,r.onclick=n,Q(r,K($,G().theme)),r}const Be=()=>{const e=G();B({...ae(e)})};function ze(){const t=e("div");return o(t).add("status-line"),t.appendChild(je("back",(()=>ge(s)))),t.appendChild(je("undo",Be)),t.appendChild(je("reset",(()=>ge(p)))),t}function Ge(){const t=e("div");return i(t,"height","100%"),t.appendChild(_e()),t.appendChild(ze()),t}function De(){const e=Me("Continue",(()=>ge(m)));return i(e,"display","none"),D(["pattern"],(({pattern:t})=>{i(e,"display",null===t?"none":"block")})),e}function He(){const e=Te();return e.appendChild(Oe("Renverso")),e.appendChild(Me("New game",(()=>ge(d)))),e.appendChild(De()),e.appendChild(Me("Color theme",(()=>ge(h)))),e}const Ye=()=>{const e=G();B({...se(e)}),ge(m)};const Pe=()=>{B({board:[],moves:[],solution:[],pattern:null,location:s})},Ve=e=>"move"+(e.length>1?"s":""),qe=()=>{const{currentLevelId:e,finishedLevelIds:t}=G(),o=ve(e,t,fe());null!==o&&(Ee(o),ge(m))};function Fe(){const{moves:e,currentLevelId:t,finishedLevelIds:o}=G(),n=ve(t,o,fe()),r=[Oe(`Puzzle solved in ${e.length} ${Ve(e)}!`),Me("To main menu",Pe)];return null!==n&&r.splice(1,0,Me("Next level",qe)),Te(r)}const Je=e=>{be(e),ge(m)};const We=()=>{const t=e("div");o(t).add("ui-level-selector-container"),Q(t,K(N,G().theme)),D(["theme"],(({theme:e})=>{Q(t,K(N,e))}),"menu-item-theme-observer");const{finishedLevelIds:n}=G();return fe().map(((e,t)=>{const r=Me(`Level ${t+1}${n.includes(e.id)?" (done)":""}`,(()=>(e=>{Ee(e),ge(m)})(e)));return o(r).remove("ui-menu-item"),o(r).add("ui-level-selector-button"),r})).forEach((e=>t.appendChild(e))),t};window.onresize=()=>{Ne()},window.onload=()=>{const e={[m]:()=>Ge(),[s]:He(),[p]:Te([Oe("Do you want to reset level progress?"),Me("Yes",(()=>Ye())),Me("No",(()=>ge(m)))]),[b]:()=>Fe(),[h]:Te([Oe("Select color theme"),Me("Light",(()=>ye(g))),Me("Dark",(()=>ye(y))),Me("Lazy eye",(()=>ge(f))),Me("Back",(()=>ge(s)))]),[d]:Te([Oe("Select level"),Me("Pick level",(()=>ge(u))),Me("Random level",(()=>ge(c))),Me("Back",(()=>ge(s)))]),[f]:Te([Oe("Lazy eye coloring settings"),Me("Left eye color",(()=>ge(v))),Me("Right eye color",(()=>ge(E))),Me("Apply",(()=>ye(w))),Me("Back",(()=>ge(h)))]),[v]:Te([Oe("Left eye color"),Ue((e=>e.leftEyeColor)),xe((e=>B({leftEyeColor:e}))),Me("Back",(()=>ge(f)))]),[E]:Te([Oe("Right eye color"),Ue((e=>e.rightEyeColor)),xe((e=>B({rightEyeColor:e}))),Me("Back",(()=>ge(f)))]),[c]:Te([Oe("Select level"),Me("Easy",(()=>Je(ue))),Me("Medium",(()=>Je(he))),Me("Hard",(()=>Je(me))),Me("Back",(()=>ge(d)))]),[u]:()=>Te([Oe("Levels"),We(),Me("Back",(()=>ge(d)))])};Se(s,e);const t=(o=F,window.localStorage.getItem(o));var o;B(null!==t?{...JSON.parse(t)}:{theme:"light"});D(Object.keys(G()),(e=>a(F,JSON.stringify(e))))};